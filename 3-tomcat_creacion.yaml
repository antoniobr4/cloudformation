AWSTemplateFormatVersion: 2010-09-09 
Description: Crea una instancia EC2 con Tomcat instalado y configurado y un grupo de seguridad.

Resources: 
  # Grupo de Seguridad 
  TomcatSecurityGroup: 
    Type: AWS::EC2::SecurityGroup 
    Properties: 
      GroupDescription: Permitir tráfico SSH, HTTP y puerto 8080 desde cualquier direccion IP 
      SecurityGroupIngress: 
        - IpProtocol: tcp 
          FromPort: 22 
          ToPort: 22 
          CidrIp: 0.0.0.0/0 
        - IpProtocol: tcp 
          FromPort: 80 
          ToPort: 80 
          CidrIp: 0.0.0.0/0 
        - IpProtocol: tcp 
          FromPort: 8080 
          ToPort: 8080 
          CidrIp: 0.0.0.0/0 

  # Instancia EC2 
  InstanciaEC2Plantilla: 
    Type: AWS::EC2::Instance 
    Properties: 
      InstanceType: t2.small 
      KeyName: vockey 
      SecurityGroupIds: 
        - !Ref TomcatSecurityGroup
      ImageId: ami-0a313d6098716f372 
      Tags: 
        - Key: Name 
          Value: TomcatServer 
      UserData: 
        Fn::Base64: 
          !Sub |
           #!/bin/bash -xe
            exec > /tmp/userdata.log 2>&1
            #====================================================================#
            # PREPARAR BOOTSTRAP DE CFN HELPER SCRIPTS
            #====================================================================#
            apt update -y
            apt install python3-pip -y
            pip3 install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz
            ln -s /usr/local/init/ubuntu/cfn-hup /etc/init.d/cfn-hup
            #====================================================================#
            # -----------------------> AQUI TU SCRIPT <--------------------------#
            #====================================================================#

            # Crear usuario tomcat
            useradd -m -d /opt/tomcat -U -s /bin/false tomcat

            # Instalar OpenJDK
            apt install -y openjdk-21-jdk

            # Descargar e instalar Tomcat
            cd /tmp
            wget https://dlcdn.apache.org/tomcat/tomcat-11/v11.0.2/bin/apache-tomcat-11.0.2.tar.gz
            mkdir -p /opt/tomcat
            tar xzvf apache-tomcat-11.0.2.tar.gz -C /opt/tomcat --strip-components=1
            chown -R tomcat:tomcat /opt/tomcat
            chmod -R u+x /opt/tomcat/bin

            # Configurar usuarios en tomcat-users.xml
            sed -i '/<\/tomcat-users>/i \
            <role rolename="manager-gui" />\n\
            <user username="manager" password="manager_password" roles="manager-gui" />\n\
            <role rolename="admin-gui" />\n\
            <user username="admin" password="admin_password" roles="manager-gui,admin-gui" />' /opt/tomcat/conf/tomcat-users.xml

            # Comentar las restricciones en Manager y Host Manager
            sed -i '/<Valve /,/\/>/ s|<Valve|<!--<Valve|; /<Valve /,/\/>/ s|/>|/>-->|' /opt/tomcat/webapps/manager/META-INF/context.xml
            sed -i '/<Valve /,/\/>/ s|<Valve|<!--<Valve|; /<Valve /,/\/>/ s|/>|/>-->|' /opt/tomcat/webapps/host-manager/META-INF/context.xml

            # Crear archivo de servicio systemd
            cat > /etc/systemd/system/tomcat.service << EOF
            [Unit]
            Description=Tomcat
            After=network.target

            [Service]
            Type=forking

            User=tomcat
            Group=tomcat

            Environment="JAVA_HOME=/usr/lib/jvm/java-1.21.0-openjdk-amd64"
            Environment="JAVA_OPTS=-Djava.security.egd=file:///dev/urandom"
            Environment="CATALINA_BASE=/opt/tomcat"
            Environment="CATALINA_HOME=/opt/tomcat"
            Environment="CATALINA_PID=/opt/tomcat/temp/tomcat.pid"
            Environment="CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC"

            ExecStart=/opt/tomcat/bin/startup.sh
            ExecStop=/opt/tomcat/bin/shutdown.sh

            RestartSec=10
            Restart=always

            [Install]
            WantedBy=multi-user.target
            EOF

            # Recargar systemd y habilitar el servicio
            systemctl daemon-reload
            systemctl start tomcat
            systemctl enable tomcat

            # Abrir puerto 8080
            ufw allow 8080

            # Este tiene que ser tu ultima instruccion del script
            # Recuerda modificar el valor del --resource al id lógico de la instancia
            /usr/local/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource TomCat --region ${AWS::Region}
